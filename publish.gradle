/*
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'maven-publish'
apply plugin: 'signing'

ext["nexusUsername"] = ''
ext["nexusPassword"] = ''
ext["nexusReleaseUrl"] = ''
ext["nexusSnapshotUrl"] = ''

// Load configurations.
File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    // Read local.properties file first if it exists.
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    // Use system environment variables.
    ext["nexusUsername"] = System.getenv('NEXUS_USERNAME')
    ext["nexusPassword"] = System.getenv('NEXUS_PASSWORD')
    ext["nexusReleaseUrl"] = System.getenv('NEXUS_RELEASE_URL')
    ext["nexusSnapshotUrl"] = System.getenv('NEXUS_SNAPSHOT_URL')
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = publishGroupId
            artifactId = publishArtifactId
            version = publishVersion

            artifact("${buildDir}/outputs/aar/${publishArtifactId}-release.aar")
            artifact androidSourcesJar

            pom {
                name = publishArtifactId
                description = 'Asgardeo Android OIDC SDK'
                url = 'https://github.com/asgardeo/asgardeo-android-oidc-sdk'
                licenses {
                    license {
                        name = 'Apache License'
                        url = 'https://github.com/asgardeo/asgardeo-android-oidc-sdk/blob/master/LICENSE'
                    }
                }
                // Version control info.
                scm {
                    connection = 'scm:git:github.com/asgardeo/asgardeo-android-oidc-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com/asgardeo/asgardeo-android-oidc-sdk.git'
                    url = 'https://github.com/asgardeo/asgardeo-android-oidc-sdk/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username = nexusUsername
                password = nexusPassword
            }

            url = version.endsWith('SNAPSHOT') ? nexusSnapshotUrl : nexusReleaseUrl
        }
    }
}
